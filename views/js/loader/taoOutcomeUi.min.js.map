{"version":3,"mappings":"AAoBAA,mDACA,OACA,wBACA,cACA,WACA,6CACA,aAKA,sBACAC,YAEAC,wBACAC,4BACAC,QACAC,eACAC,0DACA,EAGAH,uBACAI,UACAC,iBACAC,YACAL,gCACA,aACAG,MACAG,kCACA,EAEAC,2BACA,CACA,EACA,CACA,EACA,GCrCAX,qDACA,SACA,OACA,MACA,cACA,WACA,cACA,oBACA,cACA,0EACA,aAKA,sBACAC,cAEAC,qBACA,+BAGAC,uBACAI,YACAC,mBACAC,cACAL,kCAEAQ,uDACAC,QACAP,uDACAQ,YACAC,MACAC,kBACA,EACAC,eACA,2BACAC,kBACAC,kDACAhB,wBAEAgB,mGACAhB,4CAEA,sBACAgB,gDACAhB,gCACA,EACA,EACA,CACA,EACA,CACA,EACA,GCrDAH,uDACA,SACA,OACA,cACA,WACA,sBACA,wCACA,aAKA,sBACAC,gBAEAC,qBACA,+BAGAC,uBACAI,cACAC,2BACAC,cACAL,oCACAS,wEACAO,uHACAC,iBACAN,MACAR,MACAe,kCACA,CACA,EACA,CACA,EACA,CACA,EACA,GCpCAtB,uDACA,oBACA,2CACA,6CACA,+CACA,+DACA,aAKA,qBACAI,+CACA,EACA,GCdAJ,oDACA,SACA,gBACA,wBACA,aAEA,kBACA,OACA,CAYA,yCACA,GCxCAA,kJAMA,MALA,kCACAuB,6DAIA,gFACA,KCYAvB,8CACA,SACA,OACA,SACA,MACA,eACA,eACA,4CACA,0CACA,eACA,kEACA,aAYA,oDAaA,2BACA,iBAQA,MANAwB,oCACAA,8BACAC,gCAEA,GAEAC,sBACA,IAtBAvB,aACAwB,WAGAjB,SAFAkB,WACAC,WAqBA,4BACA,qDAEA,kDACA,iDAEA,gDACA,mDAEA,4DACA,kDA8EA,MA3EAnB,sCAMAP,uBAMA2B,2BAEA,MADAH,+CACA,IACA,EAQAI,0CACA,eAuBA,MArBAP,uBACAQ,gBACAR,yBACAQ,kBACA5B,gBAEA4B,YACAzB,QACAC,UACA,EAGAgB,uBACAQ,0BAEAA,mBACAA,gCAGAH,yBAEA,IACA,EAMAI,+BACA,kBACA,EAMAC,mCACA,eACA,EAMAC,iCACA,cACA,CACA,GAEAhC,YACAiC,oCACA,cAWA,MATAT,+CACA,+BACA,GAEAH,kDACA,0CACAI,gCACA,GAEAS,kBACAC,gBACA,0BACA,GACAA,gBACAX,yBACAY,QACAC,gCACAC,4BACAC,kBACA,GACAF,+BACAC,4BACAC,iBACA,GACAC,WACArC,wBACAsC,wBACAf,gBACAgB,8BACAC,QACAD,uCACA,CACA,EACA,GACAE,oBAEA,MADAN,2BACAf,mBACA,EACA,GACAU,sCACA,cAEA,4BACAE,gBACAX,gCACA,GACAoB,oBACAN,yBACA,EACA,GACAO,qBACA9C,YACA,CAEA,yBACA,GCnNAF,iDACA,SACA,SACA,OACA,SACA,cACA,4BACA,WACA,wBACA,qBACA,cACA,yBACA,+CACA,sCACA,gCACA,UACAa,EACAW,EACAyB,GACAC,OACAC,cACAC,QACAC,UACA1C,OACA2C,WACAnC,SACAoC,UACAC,qBACAC,mBACAC,sBACA,CACA,aAQA,0BACAJ,kBAEAK,kBAEAC,sBACAzC,6BAEA,CAdA,wDAmBA,OAIA0C,sBACAC,4BACAC,gCACArD,gCACAsD,8CACA,6CACA5D,SACAC,eACAC,0DACA,EACA2D,SACA1D,uCACAG,QACA,EAGA,MAFAsD,+CACArD,4BAEA,CACA,kBACAuD,+DACAxD,iBACA,GACAkC,uBACAuB,6BACAzD,iBACA,KACA0D,YACAC,oBAEAf,mBAEA9B,0CACA8C,wBACAA,eACAd,2CAEAA,iCAGA,GAEAO,kBACAP,qBACAe,OACAjC,gBACAmB,iEACAjB,wBACAA,+BACArB,2BACA,GACAiB,4BACAkB,kBACA,GACAkB,0BACAlB,iBACA,GACAmB,6CACA,GACA1B,mBAEAO,kBAGAc,kCACAM,WACAjE,cACAD,uBACA+C,mBACA,oCAEA5C,iEACAI,oDACA4D,wCACAP,WACAQ,eACAC,yBACAC,kCACA,GACAjB,OACA,GAEAhD,kCACAwD,2CACAK,WACAjE,cACAD,uBACA+C,mBACA,oCAEA5C,iEACAI,oDACA4D,wCACAN,oBACAO,eACAC,yBACAC,kCACA,GACAjB,OACA,IAGAlD,mDACA,yDAEAyC,8BACAd,gBACA,uBAEAhC,IACAyE,0BAEA5D,8CAEA,GACA4B,kBACA,EACA,CACA,CACA,GCjLA/C,kJAMA,MALA,kCACAuB,6DAIA,+CACA,KCaAvB,oDACA,SACA,SACA,OACA,WACA,MACA,cACA,cACA,cACA,qBACA,wBACA,oBACA,0CACA,eACA,gGACA,aAWA,yBACAgF,eACAC,oBACAC,sCACAC,iCACAD,oBACAE,+CACA,CACAH,iBACAI,mFACAN,uEAGAO,4CAFA,EAGA,CAIA,qCACAhC,mBACA,eACA,IACA,+CAEAiC,QADAC,qBACAA,qBAEAC,gBAEA,UACAF,wBACA,CACA,cACA,CAEA,2BACA,0BACAjC,mBACAzC,QACAP,iFACAQ,WACA4E,yBAEA,kDACAC,yCACA5B,kBACA6B,eACAC,aACAC,MACA,GACA/B,wEACAA,qCACAgC,qBACAC,cAUA,GARAD,6CACAC,iBAEAD,2DACAC,2BAIAA,UAGA,+CACAC,wBACAA,wCAEApF,uEACA,CACA,GACAkD,WACAvB,6BACAuB,4BACAlD,wBACAA,gBACA,GACAyC,iBACA,EACA4C,wBACA,wCACA/E,0CACAmC,iBACA,CACA,EACA,CAEA,iCACA,eAIA,CAEA,+BACA,0BACAzC,kEACAO,uHACAC,iBACAN,MACAR,UACAe,eACA,CACA,EACA,CAEA,2BACA,uBACA,IAtHAqE,oDACAQ,kBAuHA,OACAtC,oBACAuC,+DAEAC,2BACA,+DAGAD,qBACAD,iBACAtF,mCACAA,mCACAA,kCACAA,kDACAyF,QAEA,EAEAH,qDACAE,kBAEAV,sBACAhD,WACArC,yDACAuC,UACAC,QACAD,8BACA,EACAD,QACArC,cACAC,qBACA+F,WACA,GACAhG,8BACAC,+BACA+F,WACA,GACAhG,cACAC,uBACA+F,WACA,GACAhG,gBACAC,uBACA+F,WACA,GACAC,+BACAC,iCACAC,kBACAC,mBACAC,iBACA/E,SACA,MACAtB,UACAC,iBACAC,gBACAL,kBACAyG,uBACA,EACA,UACAtG,cACAuG,4BACArG,gBACAD,qBACAJ,sBACAyG,uBACA,CACA,CACA,EACA,CACA,CACA,GC/MA7G,8CACA,SACA,SACA,OACA,SACA,WACA,cACA,yBACA,oCACA,yBACA,qBACA,eACA,0GACA,aAKA,0BAKA6D,0BAEAkD,sBACAhD,8BACAiD,4CACAC,wDACAC,wDACAC,yDACAC,qDACAvE,oCACAwE,eACAC,aACAC,aACAC,WACAxG,iBAEAyG,WACAC,UAGAC,8DACAC,aACAC,iBACAC,6BACAC,OACA9H,kBACA,CACA,EACA+H,WACAH,iBACAC,6BACAC,OACA9H,gBACA,CACA,CACA,GACAuC,wBACAyF,wBACA,GACAzF,uBACA3B,2CACA,GAEAqH,0DACAN,aACAC,iBACAC,6BACAC,OACA9H,kBACA,CACA,EACA+H,WACAH,iBACAC,6BACAC,OACA9H,gBACA,CACA,CACA,GACAuC,uBACA3B,yCACA,GAQAsH,8CACA7E,mBACAzC,QACAP,QACAW,gBACAF,6BACAD,UACA,2BACAI,6BACA,kBACAuG,uCACA,gDACA,4BACA,EACA,GAEA,wDACAA,yCAEAA,0CAIAjG,oBACA4G,MAEA,qBACA9E,iBACA,EACA,EAMA+E,uCACA,aAGA7G,gCACA,yFACA8G,eACAC,oBAEA3F,YACArC,SACAC,gBACA+F,WACA,EACA,GAGAW,gBACA3E,QACAxB,0BACAyH,sBACAhG,+BACAhB,qBACA4G,OACAA,QAEA,GACAzF,WACArC,+DACA,CACAuC,cACA4F,sBACAC,kBACAC,kBACAC,aACA,GACAC,iBACAC,4DACAlG,WACA,EACA,EAEAmG,uCACAlG,mCACAwE,0CACAC,sCACAC,sCACAC,kCAEAa,aACA,EAGAxH,gDACAmI,cACAC,yBACA7I,2BACAsH,gCACAA,0BACA,GAGA3D,oDACAiF,cACAC,yBACA7I,2BACAE,qBACA4I,mBACAf,gCACA3G,uCACA2H,0BACA,EACA,EACA,GAGAhB,6FAGAnB,sBACAoC,0BACA,yBAEAvI,mCACAwI,iBACAN,eACA,GAGAO,2BACAxI,YACAL,cACAqG,4BACAtG,4BACA+C,oBACAsB,qEACAC,+CACA,OACAjC,cACA4E,gCACAzG,QACAyH,sBACAC,kBACAC,kBACAC,aACA,CACA,CACA,4BACAzH,qBACA,mCAEA4F,qBACAuC,2BACAxI,YACAL,cACAqG,4BACAtG,4BACA+C,oBACAsB,wEACAC,+CAEA,MADAiE,iBACA,CACAlG,cACA4E,gCACAzG,QACAyH,sBACAC,kBACAC,kBACAC,aACA,CACA,CACA,4BACAzH,qBACA,kCAEA,CACA,EACA,2BACA,GCzQAnB,sDACA,aAEA,OACA,SACA,SACA,mCACA,iCACA,CACA,EACA,aACA,SACA,8BACA,CACA,EACA,mBACA,SACA,oCACA,CACA,CACA,CACA,GCtBAA,6CACA,SACA,SACA,OACA,WACA,cACA,eACA,iBACA,6BACA,oBACA,MACA,cACA,cACA,sBACA,UACAkD,OACArC,EACAoC,GACAI,UACAF,cACAC,QACAmG,QACAC,iBACA5I,cACA6I,UACAtI,SACAuI,OACA,CACA,aAYA,qDACA,gBACApJ,YACAqJ,cACA5I,8BACA,GACAuB,gBAIA,+BACA,sBACA,EACA,CAQA,kDACA,8CACAsH,4BACAC,yCACAvH,gBACAwH,wBACA5I,4BAEAA,kBAEA,GACA6B,0BAEArB,iBACA,CAQA,4CACA,UACA,8BAGA,uDACA,kCACA,+CACA,GACA,gDACA,MA/DAiC,kDACAoG,gEACA7F,oEAkEA8F,sBAKAnG,aACAkD,sBACAkD,0BACAlG,6BACAmG,kDACAC,0DACA,iDAOA,YAJAD,6BACAd,0BACA,+CAEAgB,YACAvJ,6DAGAA,8CACAuJ,iBACAD,kCACAtJ,yBACAuJ,+BAEA,GACAb,yBACAlG,uDACA,CACA9C,WACAG,uBACA2J,mDACAC,uBACA,EAEA,GAIAzJ,mDACAA,wEACAO,uHACAC,iBACAN,MACAR,WACAe,sBACA,CACA,EACA,GAGAT,yDACA,gCACAA,4BACAQ,kBACAN,MACAwJ,YACAN,WACA,CACA,EACA,GAGApJ,8CACAD,uDACAC,QACAP,uDACAQ,YACAC,MACAC,6BACA,EACAC,eACA,2BACAC,kBACAC,kDAEAuI,mCAEAvI,kGAEA,mBACAA,+CACA,EACA,EACA,GAEAN,6CACAkE,cACA,GAEAlE,qDACAsI,cACAqB,mCACAC,+BACAC,uCACA,yBACA,6BACAxB,mBACAC,wBAGAA,8CAEAqB,uCACAxJ,KACAA,QACAyJ,kBACAC,8BACAT,sBACA,GAGAvI,oCACAY,gDACAA,aACA6G,oDACAK,iCACAmB,sBACAC,WACA,EACA,GACA7H,8BACA,EAEA,CACA,EAEA,2BACA,GCxPA/C,+DACAA,MCFA","names":["define","name","init","resultsList","action","binding","url","id","label","icon","classUri","binder","dialogConfirm","$","type","data","uri","dataType","response","feedback","failMessageHtml","httpMethod","delivery","helpers","_","execStack","Promise","areaBroker","plugins","actions","refresh","addAction","descriptor","getConfig","getClassUri","getActions","before","pluginRun","then","empty","on","self","trigger","datatable","model","filter","labels","catch","setTemplate","__","module","loggerFactory","request","urlHelper","loadingBar","taskQueue","resultsPluginsLoader","resultsListFactory","treeTaskButtonFactory","logger","err","start","config","$container","searchContainer","context","dataUrl","searchable","taskButton","taskButtonExportSQL","plugin","load","after","render","replace","uniqueValue","setTaskConfig","taskCreationUrl","taskCreationData","window","lineHeight","searchPagination","$upperElem","topSpace","parseInt","availableHeight","Math","message","responseJSON","xhr","success","$resultsListContainer","startClosed","minWidth","top","$target","$element","$modalContainer","error","$window","$contentBlock","resizeContainer","padding","sortable","paginationStrategyTop","paginationStrategyBottom","rows","sortby","sortorder","disabled","title","conf","$filterField","$filterButtonsContainer","$tableContainer","$dateStartRangeContainer","$dateEndRangeContainer","deStartFrom","deStartTo","deEndFrom","deEndTo","columns","groups","filterDeStartRange","startPicker","setup","format","field","endPicker","console","filterDeEndRange","buildGrid","done","_buildTable","col","colId","off","startfrom","startto","endfrom","endto","querytype","params","filterChanged","$elt","group","e","$btn","minimumResultsForSearch","click","standardTaskButtonFactory","section","previewerFactory","uriHelper","router","method","file","requestFileContent","fileData","downloadUrl","viewResultController","deliveryUri","$resultFilterField","$classFilterField","classFilter","filterSubmission","filterTypes","variableUri","deliveryId","resultId","itemDefinition","view","fullPage"],"sources":["../plugins/results/action/view.js","../plugins/results/action/delete.js","../plugins/results/action/download.js","../component/results/pluginsLoader.js","../component/results/areaBroker.js","../component/results/list!tpl","../component/results/list.js","../controller/inspectResults.js","../controller/resultModal!tpl","../controller/resultsMonitoring.js","../controller/resultTable.js","../controller/routes.js","../controller/viewResult.js","module-create.js","/home/alberto/workspace/oat/taocloud-ami-luoss/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/view',[\n    'i18n',\n    'layout/actions/binder',\n    'core/plugin',\n    'util/url'\n], function (__, binder, pluginFactory, urlHelper) {\n    'use strict';\n\n    /**\n     * Will add a \"View\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'view',\n\n        init: function init() {\n            var resultsList = this.getHost();\n            var action = {\n                binding: 'load',\n                url: urlHelper.route('viewResult', 'Results', 'taoOutcomeUi')\n            };\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'view',\n                label: __('View'),\n                icon: 'view',\n                action: function viewResults(id) {\n                    var context = {\n                        id: id,\n                        classUri: resultsList.getClassUri()\n                    };\n\n                    binder.exec(action, context);\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/delete',[\n    'jquery',\n    'i18n',\n    'uri',\n    'core/plugin',\n    'util/url',\n    'util/encode',\n    'ui/dialog/confirm',\n    'ui/feedback'\n], function ($, __, uri, pluginFactory, urlHelper, encode, dialogConfirm, feedback) {\n    'use strict';\n\n    /**\n     * Will add a \"Delete\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'delete',\n\n        init: function init() {\n            var resultsList = this.getHost();\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'delete',\n                label: __('Delete'),\n                icon: 'delete',\n                action: function deleteResults(id) {\n                    // prompt a confirmation dialog and then delete the result\n                    dialogConfirm(__('Please confirm deletion'), function () {\n                        $.ajax({\n                            url: urlHelper.route('delete', 'Results', 'taoOutcomeUi'),\n                            type: \"POST\",\n                            data: {\n                                uri: uri.encode(id)\n                            },\n                            dataType: 'json'\n                        }).done(function (response) {\n                            if (response.deleted) {\n                                feedback().success(__('Result has been deleted'));\n                                resultsList.refresh();\n                            } else {\n                                feedback().error(__('Something went wrong...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                                resultsList.trigger('error', response.error);\n                            }\n                        }).fail(function (err) {\n                            feedback().error(__('Something went wrong...'));\n                            resultsList.trigger('error', err);\n                        });\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/download',[\n    'jquery',\n    'i18n',\n    'core/plugin',\n    'util/url',\n    'jquery.fileDownload'\n], function ($, __, pluginFactory, urlHelper) {\n    'use strict';\n\n    /**\n     * Will add a \"Download\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'download',\n\n        init: function init() {\n            var resultsList = this.getHost();\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'download',\n                label: __('Export Results'),\n                icon: 'export',\n                action: function downloadResults(id) {\n                    $.fileDownload(urlHelper.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n                        failMessageHtml: __(\"Unexpected error occurred when generating your report. Please contact your system administrator.\"),\n                        httpMethod: 'GET',\n                        data: {\n                            id: id,\n                            delivery: resultsList.getClassUri()\n                        }\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/pluginsLoader',[\n    'core/pluginLoader',\n    'taoOutcomeUi/plugins/results/action/view',\n    'taoOutcomeUi/plugins/results/action/delete',\n    'taoOutcomeUi/plugins/results/action/download'\n], function (pluginLoader, actionView, actionDelete, actionDownload) {\n    'use strict';\n\n    /**\n     * Instantiates the plugin loader with all the required plugins configured\n     */\n    return pluginLoader({\n        action: [actionView, actionDelete, actionDownload]\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/areaBroker',[\n    'lodash',\n    'ui/areaBroker'\n], function (_, areaBroker) {\n    'use strict';\n\n    var requireAreas = [\n        'list'\n    ];\n\n    /**\n     * Creates an area broker with the required areas for the list of results\n     *\n     * @see ui/areaBroker\n     *\n     * @param {jQueryElement|HTMLElement|String} $container - the main container\n     * @param {Object} mapping - keys are the area names, values are jQueryElement\n     * @returns {broker} the broker\n     * @throws {TypeError} without a valid container\n     */\n    return _.partial(areaBroker, requireAreas);\n});\n\n","\ndefine('tpl!taoOutcomeUi/component/results/list', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"component results-list\\\">\\n    <div class=\\\"list\\\"></div>\\n</div>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/list',[\n    'jquery',\n    'i18n',\n    'lodash',\n    'uri',\n    'core/promise',\n    'ui/component',\n    'taoOutcomeUi/component/results/areaBroker',\n    'tpl!taoOutcomeUi/component/results/list',\n    'ui/datatable'\n], function ($, __, _, uri, Promise, component, resultsAreaBroker, listTpl) {\n    'use strict';\n\n    /**\n     * Component that lists all the results entry points for a particular delivery\n     *\n     * @param {Object} config\n     * @param {String} config.classUri\n     * @param {String} config.dataUrl\n     * @param {Object} config.model\n     * @param {Array} pluginFactories\n     * @returns {resultsList}\n     */\n    function resultsListFactory(config, pluginFactories) {\n        var resultsList;\n        var areaBroker;\n        var plugins = {};\n        var actions = [];\n        var classUri;\n\n        /**\n         * Calls a method from each plugins\n         *\n         * @param {String} method - the name of the method to run\n         * @returns {Promise} Resolved when all plugins are done\n         */\n        function pluginRun(method) {\n            var execStack = [];\n\n            _.forEach(plugins, function (plugin) {\n                if (_.isFunction(plugin[method])) {\n                    execStack.push(plugin[method]());\n                }\n            });\n\n            return Promise.all(execStack);\n        }\n\n        if (!_.isPlainObject(config)) {\n            throw new TypeError('The configuration is required');\n        }\n        if (!_.isString(config.classUri) || !config.classUri) {\n            throw new TypeError('The class URI is required');\n        }\n        if (!_.isString(config.dataUrl) || !config.dataUrl) {\n            throw new TypeError('The service URL is required');\n        }\n        if (!_.isPlainObject(config.model) && !_.isArray(config.model)) {\n            throw new TypeError('The data model is required');\n        }\n\n        classUri = uri.decode(config.classUri);\n\n        /**\n         *\n         * @typedef {resultsList}\n         */\n        resultsList = component({\n\n            /**\n             * Refreshes the list\n             * @returns {resultsList} chains\n             */\n            refresh: function refresh() {\n                areaBroker.getListArea().datatable('refresh');\n                return this;\n            },\n\n            /**\n             * Add a line action\n             * @param {String|Object} name\n             * @param {Function|Object} [action]\n             * @returns {resultsList} chains\n             */\n            addAction: function addAction(name, action) {\n                var descriptor;\n\n                if (_.isPlainObject(name)) {\n                    descriptor = name;\n                } else if (_.isPlainObject(action)) {\n                    descriptor = action;\n                    action.id = name;\n                } else {\n                    descriptor = {\n                        id: name,\n                        label: name\n                    };\n                }\n\n                if (_.isFunction(action)) {\n                    descriptor.action = action;\n                }\n                if (!descriptor.label) {\n                    descriptor.label = descriptor.id;\n                }\n\n                actions.push(descriptor);\n\n                return this;\n            },\n\n            /**\n             * Gives an access to the config\n             * @returns {Object}\n             */\n            getConfig: function getConfig() {\n                return this.config;\n            },\n\n            /**\n             * Gets the class URI\n             * @returns {String}\n             */\n            getClassUri: function getClassUri() {\n                return classUri;\n            },\n\n            /**\n             * Gets the registered actions\n             * @returns {Array}\n             */\n            getActions: function getActions() {\n                return actions;\n            }\n        });\n\n        return resultsList\n            .before('render', function onRender() {\n                var self = this;\n\n                areaBroker = resultsAreaBroker(this.$component, {\n                    'list': $('.list', this.$component)\n                });\n\n                _.forEach(pluginFactories, function (pluginFactory) {\n                    var plugin = pluginFactory(self, areaBroker);\n                    plugins[plugin.getName()] = plugin;\n                });\n\n                return pluginRun('init')\n                    .then(function() {\n                        return pluginRun('render');\n                    })\n                    .then(function () {\n                        areaBroker.getListArea()\n                            .empty()\n                            .on('query.datatable', function () {\n                                self.setState('loading', true)\n                                    .trigger('loading');\n                            })\n                            .on('load.datatable', function () {\n                                self.setState('loading', false)\n                                    .trigger('loaded');\n                            })\n                            .datatable({\n                                url: self.config.dataUrl,\n                                model: self.config.model,\n                                actions: actions,\n                                filter: self.config.searchable,\n                                labels: {\n                                    filter: __('Search by delivery results')\n                                }\n                            });\n                    })\n                    .catch(function (err) {\n                        self.trigger('error', err);\n                        return Promise.reject(err);\n                    });\n            })\n            .before('destroy', function onDestroy() {\n                var self = this;\n\n                return pluginRun('destroy')\n                    .then(function () {\n                        areaBroker.getListArea().empty();\n                    })\n                    .catch(function (err) {\n                        self.trigger('error', err);\n                    });\n            })\n            .setTemplate(listTpl)\n            .init(config);\n    }\n\n    return resultsListFactory;\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n * @author Jean-SÃ©bastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/inspectResults',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'core/logger',\n    'core/dataProvider/request',\n    'util/url',\n    'layout/actions/binder',\n    'layout/loading-bar',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'taoOutcomeUi/component/results/pluginsLoader',\n    'taoOutcomeUi/component/results/list',\n    'ui/taskQueueButton/treeButton'\n], function (\n    $,\n    _,\n    __,\n    module,\n    loggerFactory,\n    request,\n    urlHelper,\n    binder,\n    loadingBar,\n    feedback,\n    taskQueue,\n    resultsPluginsLoader,\n    resultsListFactory,\n    treeTaskButtonFactory\n) {\n    'use strict';\n\n    const logger = loggerFactory('controller/inspectResults');\n\n    /**\n     * Take care of errors\n     * @param err\n     */\n    function reportError(err) {\n        loadingBar.stop();\n\n        logger.error(err);\n\n        if (err instanceof Error) {\n            feedback().error(err.message);\n        }\n    }\n\n    /**\n     * @exports taoOutcomeUi/controller/resultTable\n     */\n    return {\n        /**\n         * Controller entry point\n         */\n        start: function () {\n            const config = module.config() || {};\n            const $container = $('#inspect-result');\n            const classUri = $container.data('uri');\n            const searchContainer = $('.action-bar .search-area');\n            if (searchContainer.data('show-result')) {\n                const action = {\n                    binding: 'load',\n                    url: urlHelper.route('viewResult', 'Results', 'taoOutcomeUi')\n                };\n                const context = {\n                    id: searchContainer.data('show-result'),\n                    classUri\n                };\n                searchContainer.removeData('show-result');\n                binder.exec(action, context);\n                return;\n            }\n            const listConfig = {\n                dataUrl: urlHelper.route('getResults', 'Results', 'taoOutcomeUi', {\n                    classUri: classUri\n                }),\n                model: config.dataModel,\n                searchable: config.searchable,\n                classUri: classUri\n            };\n            let taskButton;\n            let taskButtonExportSQL;\n\n            loadingBar.start();\n\n            _.forEach(config.plugins, function (plugin) {\n                if (plugin && plugin.module) {\n                    if (plugin.exclude) {\n                        resultsPluginsLoader.remove(plugin.module);\n                    } else {\n                        resultsPluginsLoader.add(plugin);\n                    }\n                }\n            });\n\n            if ($container.length) {\n                resultsPluginsLoader\n                    .load()\n                    .then(function () {\n                        resultsListFactory(listConfig, resultsPluginsLoader.getPlugins())\n                            .on('error', reportError)\n                            .on('success', function (message) {\n                                feedback().success(message);\n                            })\n                            .before('loading', function () {\n                                loadingBar.start();\n                            })\n                            .after('loaded', function () {\n                                loadingBar.stop();\n                            })\n                            .render($('.inspect-results-grid', $container));\n                    })\n                    .catch(reportError);\n            } else {\n                loadingBar.stop();\n            }\n\n            taskButton = treeTaskButtonFactory({\n                replace: true,\n                icon: 'export',\n                label: __('Export CSV'),\n                taskQueue: taskQueue\n            }).render($('#results-csv-export'));\n\n            binder.register('export_csv', function remove(actionContext) {\n                const data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n                const uniqueValue = data.uri || data.classUri || '';\n                taskButton\n                    .setTaskConfig({\n                        taskCreationUrl: this.url,\n                        taskCreationData: { uri: uniqueValue }\n                    })\n                    .start();\n            });\n\n            if ($('#results-sql-export').length) {\n                taskButtonExportSQL = treeTaskButtonFactory({\n                    replace: true,\n                    icon: 'export',\n                    label: __('Export SQL'),\n                    taskQueue: taskQueue\n                }).render($('#results-sql-export'));\n\n                binder.register('export_sql', function remove(actionContext) {\n                    const data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n                    const uniqueValue = data.uri || data.classUri || '';\n                    taskButtonExportSQL\n                        .setTaskConfig({\n                            taskCreationUrl: this.url,\n                            taskCreationData: { uri: uniqueValue }\n                        })\n                        .start();\n                });\n            }\n\n            binder.register('open_url', function (actionContext) {\n                const data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n\n                request(this.url, data, 'POST')\n                    .then(response => {\n                        const url = response.url;\n\n                        if (url) {\n                            window.open(url, '_blank');\n                        } else {\n                            feedback().info(__('The URL does not exist.'));\n                        }\n                    })\n                    .catch(reportError);\n            });\n        }\n    };\n});\n\n","\ndefine('tpl!taoOutcomeUi/controller/resultModal', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"modal results-modal\\\">\\n\\n</div>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Aleksej Tikhanovich, <aleksej@taotesting.com>\n */\n\ndefine('taoOutcomeUi/controller/resultsMonitoring',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/url',\n    'uri',\n    'ui/feedback',\n    'util/locale',\n    'util/encode',\n    'layout/loading-bar',\n    'layout/actions/binder',\n    'ui/dialog/confirm',\n    'tpl!taoOutcomeUi/controller/resultModal',\n    'ui/datatable'\n], function ($, _, __, url, uri, feedback, locale, encode, loadingBar, binder, dialogConfirm, resultModalTpl) {\n    'use strict';\n\n    var $resultsListContainer = $('.results-list-container');\n    var $window = $(window);\n\n    /**\n     * Internet Explorer and Edge will not open the detail view when the table row was below originally below the fold.\n     * This is not cause by a too low container or some sort of overlay. As a workaround they get just as many rows\n     * as they can handle in one fold.\n     * @returns {number}\n     */\n    function getNumRows() {\n        var lineHeight       = 30;\n        var searchPagination = 70;\n        var $upperElem       = $('.content-container h2');\n        var topSpace         = $upperElem.offset().top\n            + $upperElem.height()\n            + parseInt($upperElem.css('margin-bottom'), 10)\n            + lineHeight\n            + searchPagination;\n        var availableHeight = $window.height() - topSpace - $('footer.dark-bar').outerHeight();\n        if(!window.MSInputMethodContext && !document.documentMode && !window.StyleMedia) {\n           return 25;\n        }\n        return Math.min(Math.floor(availableHeight / lineHeight), 25);\n    }\n\n\n\n    function getRequestErrorMessage (xhr) {\n        loadingBar.start();\n        var message = '';\n        try {\n            var responseJSON = $.parseJSON(xhr.responseText);\n            if (responseJSON.message) {\n                message = responseJSON.message;\n            } else {\n                message = xhr.responseText;\n            }\n        } catch (e) {\n            message = xhr.responseText;\n        }\n        return message;\n    }\n\n    function viewResult(rowId) {\n        var res = parseRowId(rowId);\n        loadingBar.start();\n        $.ajax({\n            url : url.route('viewResult', 'Results', 'taoOutcomeUi', {id : res[0], classUri: res[1]}),\n            type : 'GET',\n            success : function (result) {\n\n                var $container = $(resultModalTpl()).append(result);\n                $resultsListContainer.append($container);\n                $container.modal({\n                    startClosed : false,\n                    minWidth : 450,\n                    top: 50\n                });\n                $container.css({'max-height': $window.height() - 80 + 'px', 'overflow': 'auto'});\n                $container.on('click', function(e) {\n                    var $target = $(e.target);\n                    var $element = null;\n\n                    if ($target.is('a') && $target.hasClass(\"preview\")) {\n                        $element = $target;\n                    } else {\n                        if ($target.is('span') && $target.parent().hasClass(\"preview\")) {\n                            $element = $target.parent();\n                        }\n                    }\n\n                    if ($element) {\n                        // the trigger button might itself be inside a modal, in this case close that modal before doing anything else\n                        // only one modal should be open\n                        var $modalContainer = $element.parents('.modal');\n                        if ($modalContainer.length) {\n                            $modalContainer.trigger('closed.modal');\n                        }\n                        $('.preview-overlay').css({ zIndex: $container.modal().css('z-index') + 1 });\n                    }\n                });\n                $container\n                    .on('closed.modal', function(){\n                        $container.modal('destroy');\n                        $('.modal-bg').remove();\n                        $(this).remove();\n                    });\n                loadingBar.stop();\n            },\n            error : function (xhr, err) {\n                var message = getRequestErrorMessage(xhr);\n                feedback().error(message, {encodeHtml : false});\n                loadingBar.stop();\n            }\n        });\n    }\n\n    function checkValidItem() {\n        if (!this.start_time) {\n            return true\n        }\n        return false;\n    }\n\n    function downloadResult(rowId) {\n        var res = parseRowId(rowId);\n        $.fileDownload(url.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n            failMessageHtml: __(\"Unexpected error occurred when generating your report. Please contact your system administrator.\"),\n            httpMethod: 'GET',\n            data: {\n                id: res[0],\n                delivery: res[1]\n            }\n        });\n    }\n\n    function parseRowId(rowId) {\n        return rowId.split(\"|\");\n    }\n\n    return {\n        start: function () {\n            var $contentBlock = $resultsListContainer.parents(\".content-block\");\n\n            var resizeContainer = function() {\n                var padding = $contentBlock.innerHeight() - $contentBlock.height();\n\n                //calculate height for contentArea\n                $contentBlock.height(\n                    $window.height()\n                    - $(\"footer.dark-bar\").outerHeight()\n                    - $(\"header.dark-bar\").outerHeight()\n                    - $(\".tab-container\").outerHeight()\n                    - $(\".action-bar.content-action-bar\").outerHeight()\n                    - padding\n                );\n            };\n\n            $window.on('resize', _.debounce(resizeContainer, 300));\n            resizeContainer();\n\n            $resultsListContainer\n                .datatable({\n                    url: url.route('data', 'ResultsMonitoring', 'taoOutcomeUi'),\n                    filter: true,\n                    labels: {\n                        filter: __('Search by results')\n                    },\n                    model: [{\n                        id: 'delivery',\n                        label: __('Delivery'),\n                        sortable: false\n                    }, {\n                        id: 'deliveryResultIdentifier',\n                        label: __('Delivery Execution'),\n                        sortable: false,\n                    }, {\n                        id: 'userName',\n                        label: __('Test Taker'),\n                        sortable: false\n                    }, {\n                        id: 'start_time',\n                        label: __('Start Time'),\n                        sortable: false\n                    }],\n                    paginationStrategyTop: 'simple',\n                    paginationStrategyBottom: 'pages',\n                    rows: getNumRows(),\n                    sortby: 'result_id',\n                    sortorder: 'desc',\n                    actions : {\n                        'view' : {\n                            id: 'view',\n                            label: __('View'),\n                            icon: 'external',\n                            action: viewResult,\n                            disabled: checkValidItem\n                        },\n                        'download' :{\n                            id : 'download',\n                            title : __('Download result'),\n                            icon : 'download',\n                            label : __('Download'),\n                            action: downloadResult,\n                            disabled: checkValidItem\n                        }\n                    }\n                });\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/resultTable',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'util/url',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'ui/taskQueueButton/standardButton',\n    'ui/dateRange/dateRange',\n    'layout/loading-bar',\n    'ui/datatable'\n], function($, _, __, module, urlUtil, feedback, taskQueue, standardTaskButtonFactory, dateRangeFactory, loadingBar) {\n    'use strict';\n\n    /**\n     * @exports taoOutcomeUi/controller/resultTable\n     */\n    var resulTableController =  {\n\n        /**\n         * Controller entry point\n         */\n        start : function start() {\n\n            var conf = module.config();\n            var $container = $(\".result-table\");\n            var $filterField = $('.result-filter', $container);\n            var $filterButtonsContainer = $('.filter-buttons', $container);\n            var $tableContainer = $('.result-table-container', $container);\n            var $dateStartRangeContainer = $('.de-start-range', $container);\n            var $dateEndRangeContainer = $('.de-end-range', $container);\n            var filter = conf.filter || 'lastSubmitted';\n            var deStartFrom = '';\n            var deStartTo = '';\n            var deEndFrom = '';\n            var deEndTo = '';\n            var uri = conf.uri || '';\n            //keep columns through calls\n            var columns = [];\n            var groups = {};\n\n            //setup the date range pickers\n            var filterDeStartRange = dateRangeFactory($dateStartRangeContainer, {\n                startPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodStart',\n                    }\n                },\n                endPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodEnd'\n                    }\n                }\n            })\n                .on('change', function (v) {\n                    console.log('changed', v)\n                })\n                .on('render', function () {\n                    $('button', $dateStartRangeContainer).hide();\n                });\n\n            var filterDeEndRange = dateRangeFactory($dateEndRangeContainer, {\n                startPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodStart',\n                    }\n                },\n                endPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodEnd'\n                    }\n                }\n            })\n                .on('render', function () {\n                    $('button', $dateEndRangeContainer).hide();\n                });\n\n            /**\n             * Load columns to rebuild the datatable dynamically\n             * @param {String} url  - the URL that retrieve the columns\n             * @param {String} [action = 'add'] - 'add' or 'remove' the retrieved columns\n             * @param {Function} done - once the datatable is loaded\n             */\n            var buildGrid = function buildGrid(url, action, done) {\n                loadingBar.start();\n                $.ajax({\n                    url: url,\n                    dataType: 'json',\n                    data: {filter: filter, uri: uri},\n                    type: 'GET'\n                }).done(function (response) {\n                    if (response && response.columns) {\n                        if (action === 'remove') {\n                            columns = _.reject(columns, function (col) {\n                                return _.find(response.columns, function (resCol) {\n                                    return _.isEqual(col, resCol);\n                                });\n                            });\n                        } else {\n                            if (typeof response.first !== 'undefined' && response.first === true) {\n                                columns = response.columns.concat(columns);\n                            } else {\n                                columns = columns.concat(response.columns);\n                            }\n                        }\n                    }\n                    if (_.isFunction(done)) {\n                        done();\n                    }\n                }).always(function () {\n                    loadingBar.stop();\n                });\n            };\n\n            /**\n             * Rebuild the datatable\n             * @param {Function} done - once the datatable is loaded\n             */\n            var _buildTable = function _buildTable(done) {\n                var model = [];\n\n                //set up model from columns\n                _.forEach(columns, function (col) {\n                    var colId = col.prop ? (col.prop + '_' + col.contextType) : (col.contextId + '_' + col.variableIdentifier);\n                    if(col.columnId){\n                        colId= col.columnId\n                    }\n                    model.push({\n                        id: colId,\n                        label: col.label,\n                        sortable: false\n                    });\n                });\n\n                //re-build the datatable\n                $tableContainer\n                    .empty()\n                    .data('ui.datatable', null)\n                    .off('load.datatable')\n                    .on('load.datatable', function () {\n                        if (_.isFunction(done)) {\n                            done();\n                            done = '';\n                        }\n                    })\n                    .datatable({\n                        url: urlUtil.route('feedDataTable', 'ResultTable', 'taoOutcomeUi',\n                            {\n                                filter: filter,\n                                startfrom: deStartFrom,\n                                startto: deStartTo,\n                                endfrom: deEndFrom,\n                                endto: deEndTo\n                            }),\n                        querytype: 'POST',\n                        params: {columns: JSON.stringify(columns), '_search': false, uri: uri},\n                        model: model\n                    });\n            };\n\n            var filterChanged = function filterChanged() {\n                filter = $filterField.select2('val');\n                deStartFrom = filterDeStartRange.getStart();\n                deStartTo = filterDeStartRange.getEnd();\n                deEndFrom = filterDeEndRange.getStart();\n                deEndTo = filterDeEndRange.getEnd();\n                //rebuild the current table\n                _buildTable();\n            };\n\n            //group button to toggle them\n            $('[data-group]', $container).each(function () {\n                var $elt = $(this);\n                var group = $elt.data('group');\n                var action = $elt.data('action');\n                groups[group] = groups[group] || {};\n                groups[group][action] = $elt;\n            });\n\n            //regarding button data, we rebuild the table\n            $container.on('click', '[data-group]', function (e) {\n                var $elt = $(this);\n                var group = $elt.data('group');\n                var action = $elt.data('action');\n                var url = $elt.data('url');\n                e.preventDefault();\n                buildGrid(url, action, function () {\n                    _.forEach(groups[group], function ($btn) {\n                        $btn.toggleClass('hidden');\n                    });\n                });\n            });\n\n            //default table\n            buildGrid(urlUtil.route('getTestTakerColumns', 'ResultTable', 'taoOutcomeUi', {filter: filter}));\n\n            //setup the filtering\n            $filterField.select2({\n                minimumResultsForSearch: -1\n            }).select2('val', filter);\n\n            $('.result-filter-btn', $container)\n                .click(function () {\n                    filterChanged();\n                });\n\n            //instantiate the task creation button\n            standardTaskButtonFactory({\n                type: 'info',\n                icon: 'export',\n                title: __('Export CSV File'),\n                label: __('Export CSV File'),\n                taskQueue: taskQueue,\n                taskCreationUrl: urlUtil.route('export', 'ResultTable', 'taoOutcomeUi'),\n                taskCreationData: function getTaskRequestData() {\n                    return {\n                        filter: filter,\n                        columns: JSON.stringify(columns),\n                        uri: uri,\n                        startfrom: deStartFrom,\n                        startto: deStartTo,\n                        endfrom: deEndFrom,\n                        endto: deEndTo\n                    };\n                }\n            }).on('error', function (err) {\n                feedback().error(err);\n            }).render($filterButtonsContainer);\n\n            if (conf.allowSqlExport) {\n                standardTaskButtonFactory({\n                    type: 'info',\n                    icon: 'export',\n                    title: __('Export SQL File'),\n                    label: __('Export SQL File'),\n                    taskQueue: taskQueue,\n                    taskCreationUrl: urlUtil.route('exportSQL', 'ResultTable', 'taoOutcomeUi'),\n                    taskCreationData: function getTaskRequestData() {\n                        filterChanged();\n                        return {\n                            filter: filter,\n                            columns: JSON.stringify(columns),\n                            uri: uri,\n                            startfrom: deStartFrom,\n                            startto: deStartTo,\n                            endfrom: deEndFrom,\n                            endto: deEndTo\n                        };\n                    }\n                }).on('error', function (err) {\n                    feedback().error(err);\n                }).render($filterButtonsContainer);\n            }\n        }\n    };\n    return resulTableController;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoOutcomeUi/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Results': {\n            'actions': {\n                'viewResult' : 'controller/viewResult',\n                'index' : 'controller/inspectResults'\n            }\n        },\n        'ResultTable': {\n            'actions': {\n                'index' : 'controller/resultTable'\n            }\n        },\n        'ResultsMonitoring': {\n            'actions': {\n                'index': 'controller/resultsMonitoring'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/viewResult',[\n    'module',\n    'jquery',\n    'i18n',\n    'util/url',\n    'core/logger',\n    'core/request',\n    'layout/section',\n    'taoItems/previewer/factory',\n    'ui/dialog/confirm',\n    'uri',\n    'ui/feedback',\n    'core/router',\n    'jquery.fileDownload'\n], function (\n    module,\n    $,\n    __,\n    urlHelper,\n    loggerFactory,\n    request,\n    section,\n    previewerFactory,\n    dialogConfirm,\n    uriHelper,\n    feedback,\n    router\n) {\n    'use strict';\n\n    const logger = loggerFactory('taoOutcomeUi/viewResults');\n    const downloadUrl = urlHelper.route('getFile', 'Results', 'taoOutcomeUi');\n    const dataUrl = urlHelper.route('getVariableFile', 'Results', 'taoOutcomeUi');\n\n    /**\n     * Requests a file content given the URIs\n     * @param {String} variableUri - The URI of a variable\n     * @param {String} deliveryUri - The URI of a delivery\n     * @returns {Promise}\n     */\n    function requestFileContent(variableUri, deliveryUri) {\n        return request({\n            url: dataUrl,\n            method: 'POST',\n            data: { variableUri, deliveryUri }\n        })\n            .then(response => {\n                // The response may contain more than the expected data,\n                // like the success status, which is not relevant here.\n                // Hence this rewriting.\n                const { data, name, mime } = response;\n                return { data, name, mime };\n            });\n    }\n\n    /**\n     * Makes sure the response contains the file data if it is a file record\n     * @param {Object} response\n     * @param {String} deliveryUri\n     * @returns {Promise}\n     */\n    function refineFileResponse(response, deliveryUri) {\n        const { file } = response && response.base || {};\n        if (file && file.uri && !file.data) {\n            return requestFileContent(file.uri, deliveryUri)\n                .then(fileData => {\n                    if (fileData && fileData.data) {\n                        response.base.file = fileData;\n                    } else {\n                        response.base = null;\n                    }\n                })\n                .catch(e => logger.error(e));\n        }\n        return Promise.resolve();\n    }\n\n    /**\n     * Makes sure the item state contains the file data in the response if it is a file record\n     * @param {Object} state\n     * @param {String} deliveryUri\n     * @returns {Promise}\n     */\n    function refineItemState(state, deliveryUri) {\n        if (!state) {\n            return Promise.resolve(state);\n        }\n\n        const filePromises = Object.keys(state).map(identifier => {\n            const { response } = state[identifier];\n            return refineFileResponse(response, deliveryUri);\n        });\n        return Promise.all(filePromises).then(() => state);\n    }\n\n    /**\n     * @exports taoOutcomeUi/controller/viewResult\n     */\n    const viewResultController =  {\n\n        /**\n         * Controller entry point\n         */\n        start(){\n            const conf = module.config();\n            const deliveryUri = conf.classUri;\n            const $container = $('#view-result');\n            const $resultFilterField = $('.result-filter', $container);\n            const $classFilterField = $('[name=\"class-filter\"]', $container);\n            let classFilter = JSON.parse(conf.filterTypes) || [];\n\n            //set up filter field\n            $resultFilterField.select2({\n                minimumResultsForSearch : -1\n            }).select2('val', conf.filterSubmission || 'all');\n\n        for (let i in classFilter) {\n            $(`[value = \"${classFilter[i]}\"]`).prop('checked', 'checked');\n        }\n\n            $('.result-filter-btn', $container).click(() => {\n                classFilter = [''];\n                $classFilterField.each(function () {\n                    if ($(this).prop('checked')) {\n                        classFilter.push($(this).val());\n                    }\n                });\n                section.loadContentBlock(\n                    urlHelper.route('viewResult', 'Results', 'taoOutcomeUi'),\n                    {\n                        id: conf.id,\n                        classUri:  conf.classUri,\n                        filterSubmission: $resultFilterField.select2('val'),\n                        filterTypes: classFilter\n                    }\n                );\n            });\n\n\n            //bind the xml download button\n            $('#xmlDownload', $container).on('click', function () {\n                $.fileDownload(urlHelper.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n                    failMessageHtml: __(\"Unexpected error occurred when generating your report. Please contact your system administrator.\"),\n                    httpMethod: 'GET',\n                    data: {\n                        id: conf.id,\n                        delivery: conf.classUri\n                    }\n                });\n            });\n\n            // bind the file download button\n            $('[id^=fileDownload]', $container).on('click', function () {\n                const variableUri = $(this).val();\n                $.fileDownload(downloadUrl, {\n                    httpMethod: 'POST',\n                    data: {\n                        variableUri,\n                        deliveryUri\n                    }\n                });\n            });\n\n            //bind the download buttons\n            $('.delete', $container).on('click', function () {\n                dialogConfirm(__('Please confirm deletion'), function () {\n                    $.ajax({\n                        url: urlHelper.route('delete', 'Results', 'taoOutcomeUi'),\n                        type: \"POST\",\n                        data: {\n                            uri: uriHelper.encode(conf.id)\n                        },\n                        dataType: 'json'\n                    }).done(function (response) {\n                        if (response.deleted) {\n                            feedback().success(__('Result has been deleted'));\n                            // Hack to go back to the list of results\n                            router.dispatch('tao/Main/index');\n                        } else {\n                            feedback().error(__('Something went wrong...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    }).fail(function () {\n                        feedback().error(__('Something went wrong...'));\n                    });\n                });\n            });\n\n            $('.print', $container).on('click', function () {\n                window.print();\n            });\n\n            $('.preview', $container).on('click', function (e) {\n                const $btn = $(this);\n                const deliveryId = $btn.data('deliveryId');\n                const resultId = $btn.data('resultId');\n                const itemDefinition = $btn.data('definition');\n                let uri = $btn.data('uri');\n                const type = $btn.data('type');\n                e.preventDefault();\n                if ($btn.prop('disabled')) {\n                    return;\n                }\n                $btn.prop('disabled', true).addClass('disabled');\n\n                if (deliveryId && resultId && itemDefinition) {\n                    uri = {\n                        uri: uri,\n                        resultId: resultId,\n                        itemDefinition: itemDefinition,\n                        deliveryUri: deliveryId\n                    };\n                }\n\n                Promise.resolve($btn.data('state'))\n                    .then(state => refineItemState(state, deliveryUri))\n                    .then(state => {\n                        $btn.removeProp('disabled').removeClass('disabled');\n                        previewerFactory(type, uri, state, {\n                            view: 'reviewRenderer',\n                            fullPage: true\n                        });\n                    })\n                    .catch(err => logger.error(err));\n            });\n\n        }\n    };\n\n    return viewResultController;\n});\n\n","\ndefine(\"taoOutcomeUi/loader/taoOutcomeUi.bundle\", function(){});\n","define(\"taoOutcomeUi/loader/taoOutcomeUi.min\", [\"taoItems/loader/taoItems.min\"], function(){});\n"]}