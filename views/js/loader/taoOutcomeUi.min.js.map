{"version":3,"names":["define","__","binder","pluginFactory","urlHelper","name","init","resultsList","getHost","action","binding","url","route","addAction","id","label","icon","viewResults","context","classUri","getClassUri","exec","$","uri","encode","dialogConfirm","feedback","deleteResults","ajax","type","data","dataType","done","response","deleted","success","refresh","error","html","encodeHtml","trigger","fail","err","downloadResults","fileDownload","failMessageHtml","httpMethod","delivery","pluginLoader","actionView","actionDelete","actionDownload","_","areaBroker","requireAreas","partial","hb","template","compiler","main","container","depth0","helpers","partials","useData","Promise","component","resultsAreaBroker","listTpl","resultsListFactory","config","pluginFactories","pluginRun","method","execStack","forEach","plugins","plugin","isFunction","push","all","actions","isPlainObject","TypeError","isString","dataUrl","model","isArray","decode","getListArea","datatable","descriptor","getConfig","getActions","before","onRender","self","$component","list","getName","then","empty","on","setState","filter","searchable","labels","catch","reject","onDestroy","setTemplate","module","loggerFactory","request","loadingBar","taskQueue","resultsPluginsLoader","treeTaskButtonFactory","reportError","stop","logger","Error","message","start","$container","searchContainer","removeData","listConfig","dataModel","taskButton","taskButtonExportSQL","exclude","remove","add","length","load","getPlugins","after","render","replace","register","actionContext","pick","uniqueValue","setTaskConfig","taskCreationUrl","taskCreationData","window","open","info","locale","resultModalTpl","getNumRows","lineHeight","searchPagination","$upperElem","topSpace","offset","top","height","parseInt","css","availableHeight","$window","outerHeight","MSInputMethodContext","document","documentMode","StyleMedia","Math","min","floor","getRequestErrorMessage","xhr","responseJSON","parseJSON","responseText","e","viewResult","rowId","res","parseRowId","result","append","$resultsListContainer","modal","startClosed","minWidth","\"max-height\"","overflow","$target","target","$element","is","hasClass","parent","$modalContainer","parents","zIndex","checkValidItem","start_time","downloadResult","split","$contentBlock","resizeContainer","padding","innerHeight","debounce","sortable","paginationStrategyTop","paginationStrategyBottom","rows","sortby","sortorder","view","disabled","download","title","urlUtil","standardTaskButtonFactory","dateRangeFactory","resulTableController","conf","$filterField","$filterButtonsContainer","$tableContainer","$dateStartRangeContainer","$dateEndRangeContainer","deStartFrom","deStartTo","deEndFrom","deEndTo","columns","groups","filterDeStartRange","startPicker","setup","format","field","endPicker","v","console","log","hide","filterDeEndRange","buildGrid","col","find","resCol","isEqual","first","concat","always","_buildTable","colId","prop","contextType","contextId","variableIdentifier","columnId","off","startfrom","startto","endfrom","endto","querytype","params","JSON","stringify","_search","filterChanged","select2","getStart","getEnd","each","$elt","group","preventDefault","$btn","toggleClass","minimumResultsForSearch","click","getTaskRequestData","allowSqlExport","Results","index","ResultTable","ResultsMonitoring","section","previewerFactory","uriHelper","router","requestFileContent","variableUri","deliveryUri","mime","refineFileResponse","file","base","fileData","resolve","refineItemState","state","filePromises","Object","keys","map","identifier","downloadUrl","viewResultController","$resultFilterField","$classFilterField","classFilter","parse","filterTypes","i","filterSubmission","val","loadContentBlock","dispatch","print","deliveryId","resultId","itemDefinition","addClass","removeProp","removeClass","fullPage"],"sources":["/Users/martinnicholson/work/currentgen/tao-community-handlebars4/tao/views/build/config-wrap-start-default.js","../plugins/results/action/view.js","../plugins/results/action/delete.js","../plugins/results/action/download.js","../component/results/pluginsLoader.js","../component/results/areaBroker.js","../component/results/list!tpl","../component/results/list.js","../controller/inspectResults.js","../controller/resultModal!tpl","../controller/resultsMonitoring.js","../controller/resultTable.js","../controller/routes.js","../controller/viewResult.js","module-create.js","/Users/martinnicholson/work/currentgen/tao-community-handlebars4/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/view',[\n    'i18n',\n    'layout/actions/binder',\n    'core/plugin',\n    'util/url'\n], function (__, binder, pluginFactory, urlHelper) {\n    'use strict';\n\n    /**\n     * Will add a \"View\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'view',\n\n        init: function init() {\n            var resultsList = this.getHost();\n            var action = {\n                binding: 'load',\n                url: urlHelper.route('viewResult', 'Results', 'taoOutcomeUi')\n            };\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'view',\n                label: __('View'),\n                icon: 'view',\n                action: function viewResults(id) {\n                    var context = {\n                        id: id,\n                        classUri: resultsList.getClassUri()\n                    };\n\n                    binder.exec(action, context);\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/delete',[\n    'jquery',\n    'i18n',\n    'uri',\n    'core/plugin',\n    'util/url',\n    'util/encode',\n    'ui/dialog/confirm',\n    'ui/feedback'\n], function ($, __, uri, pluginFactory, urlHelper, encode, dialogConfirm, feedback) {\n    'use strict';\n\n    /**\n     * Will add a \"Delete\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'delete',\n\n        init: function init() {\n            var resultsList = this.getHost();\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'delete',\n                label: __('Delete'),\n                icon: 'delete',\n                action: function deleteResults(id) {\n                    // prompt a confirmation dialog and then delete the result\n                    dialogConfirm(__('Please confirm deletion'), function () {\n                        $.ajax({\n                            url: urlHelper.route('delete', 'Results', 'taoOutcomeUi'),\n                            type: \"POST\",\n                            data: {\n                                uri: uri.encode(id)\n                            },\n                            dataType: 'json'\n                        }).done(function (response) {\n                            if (response.deleted) {\n                                feedback().success(__('Result has been deleted'));\n                                resultsList.refresh();\n                            } else {\n                                feedback().error(__('Something went wrong...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                                resultsList.trigger('error', response.error);\n                            }\n                        }).fail(function (err) {\n                            feedback().error(__('Something went wrong...'));\n                            resultsList.trigger('error', err);\n                        });\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/plugins/results/action/download',[\n    'jquery',\n    'i18n',\n    'core/plugin',\n    'util/url',\n    'jquery.fileDownload'\n], function ($, __, pluginFactory, urlHelper) {\n    'use strict';\n\n    /**\n     * Will add a \"Download\" button on each line of the list of results\n     */\n    return pluginFactory({\n        name: 'download',\n\n        init: function init() {\n            var resultsList = this.getHost();\n\n            // this action will be available for each displayed line in the list\n            resultsList.addAction({\n                id: 'download',\n                label: __('Export Results'),\n                icon: 'export',\n                action: function downloadResults(id) {\n                    $.fileDownload(urlHelper.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n                        failMessageHtml: __(\"Unexpected error occurred when generating your report. Please contact your system administrator.\"),\n                        httpMethod: 'GET',\n                        data: {\n                            id: id,\n                            delivery: resultsList.getClassUri()\n                        }\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/pluginsLoader',[\n    'core/pluginLoader',\n    'taoOutcomeUi/plugins/results/action/view',\n    'taoOutcomeUi/plugins/results/action/delete',\n    'taoOutcomeUi/plugins/results/action/download'\n], function (pluginLoader, actionView, actionDelete, actionDownload) {\n    'use strict';\n\n    /**\n     * Instantiates the plugin loader with all the required plugins configured\n     */\n    return pluginLoader({\n        action: [actionView, actionDelete, actionDownload]\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/areaBroker',[\n    'lodash',\n    'ui/areaBroker'\n], function (_, areaBroker) {\n    'use strict';\n\n    var requireAreas = [\n        'list'\n    ];\n\n    /**\n     * Creates an area broker with the required areas for the list of results\n     *\n     * @see ui/areaBroker\n     *\n     * @param {jQueryElement|HTMLElement|String} $container - the main container\n     * @param {Object} mapping - keys are the area names, values are jQueryElement\n     * @returns {broker} the broker\n     * @throws {TypeError} without a valid container\n     */\n    return _.partial(areaBroker, requireAreas);\n});\n\n","\ndefine('tpl!taoOutcomeUi/component/results/list', ['handlebars'], function(hb){ return hb.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"component results-list\\\">\\n    <div class=\\\"list\\\"></div>\\n</div>\";\n},\"useData\":true}); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/component/results/list',[\n    'jquery',\n    'i18n',\n    'lodash',\n    'uri',\n    'core/promise',\n    'ui/component',\n    'taoOutcomeUi/component/results/areaBroker',\n    'tpl!taoOutcomeUi/component/results/list',\n    'ui/datatable'\n], function ($, __, _, uri, Promise, component, resultsAreaBroker, listTpl) {\n    'use strict';\n\n    /**\n     * Component that lists all the results entry points for a particular delivery\n     *\n     * @param {Object} config\n     * @param {String} config.classUri\n     * @param {String} config.dataUrl\n     * @param {Object} config.model\n     * @param {Array} pluginFactories\n     * @returns {resultsList}\n     */\n    function resultsListFactory(config, pluginFactories) {\n        var resultsList;\n        var areaBroker;\n        var plugins = {};\n        var actions = [];\n        var classUri;\n\n        /**\n         * Calls a method from each plugins\n         *\n         * @param {String} method - the name of the method to run\n         * @returns {Promise} Resolved when all plugins are done\n         */\n        function pluginRun(method) {\n            var execStack = [];\n\n            _.forEach(plugins, function (plugin) {\n                if (_.isFunction(plugin[method])) {\n                    execStack.push(plugin[method]());\n                }\n            });\n\n            return Promise.all(execStack);\n        }\n\n        if (!_.isPlainObject(config)) {\n            throw new TypeError('The configuration is required');\n        }\n        if (!_.isString(config.classUri) || !config.classUri) {\n            throw new TypeError('The class URI is required');\n        }\n        if (!_.isString(config.dataUrl) || !config.dataUrl) {\n            throw new TypeError('The service URL is required');\n        }\n        if (!_.isPlainObject(config.model) && !_.isArray(config.model)) {\n            throw new TypeError('The data model is required');\n        }\n\n        classUri = uri.decode(config.classUri);\n\n        /**\n         *\n         * @typedef {resultsList}\n         */\n        resultsList = component({\n\n            /**\n             * Refreshes the list\n             * @returns {resultsList} chains\n             */\n            refresh: function refresh() {\n                areaBroker.getListArea().datatable('refresh');\n                return this;\n            },\n\n            /**\n             * Add a line action\n             * @param {String|Object} name\n             * @param {Function|Object} [action]\n             * @returns {resultsList} chains\n             */\n            addAction: function addAction(name, action) {\n                var descriptor;\n\n                if (_.isPlainObject(name)) {\n                    descriptor = name;\n                } else if (_.isPlainObject(action)) {\n                    descriptor = action;\n                    action.id = name;\n                } else {\n                    descriptor = {\n                        id: name,\n                        label: name\n                    };\n                }\n\n                if (_.isFunction(action)) {\n                    descriptor.action = action;\n                }\n                if (!descriptor.label) {\n                    descriptor.label = descriptor.id;\n                }\n\n                actions.push(descriptor);\n\n                return this;\n            },\n\n            /**\n             * Gives an access to the config\n             * @returns {Object}\n             */\n            getConfig: function getConfig() {\n                return this.config;\n            },\n\n            /**\n             * Gets the class URI\n             * @returns {String}\n             */\n            getClassUri: function getClassUri() {\n                return classUri;\n            },\n\n            /**\n             * Gets the registered actions\n             * @returns {Array}\n             */\n            getActions: function getActions() {\n                return actions;\n            }\n        });\n\n        return resultsList\n            .before('render', function onRender() {\n                var self = this;\n\n                areaBroker = resultsAreaBroker(this.$component, {\n                    'list': $('.list', this.$component)\n                });\n\n                _.forEach(pluginFactories, function (pluginFactory) {\n                    var plugin = pluginFactory(self, areaBroker);\n                    plugins[plugin.getName()] = plugin;\n                });\n\n                return pluginRun('init')\n                    .then(function() {\n                        return pluginRun('render');\n                    })\n                    .then(function () {\n                        areaBroker.getListArea()\n                            .empty()\n                            .on('query.datatable', function () {\n                                self.setState('loading', true)\n                                    .trigger('loading');\n                            })\n                            .on('load.datatable', function () {\n                                self.setState('loading', false)\n                                    .trigger('loaded');\n                            })\n                            .datatable({\n                                url: self.config.dataUrl,\n                                model: self.config.model,\n                                actions: actions,\n                                filter: self.config.searchable,\n                                labels: {\n                                    filter: __('Search by delivery results')\n                                }\n                            });\n                    })\n                    .catch(function (err) {\n                        self.trigger('error', err);\n                        return Promise.reject(err);\n                    });\n            })\n            .before('destroy', function onDestroy() {\n                var self = this;\n\n                return pluginRun('destroy')\n                    .then(function () {\n                        areaBroker.getListArea().empty();\n                    })\n                    .catch(function (err) {\n                        self.trigger('error', err);\n                    });\n            })\n            .setTemplate(listTpl)\n            .init(config);\n    }\n\n    return resultsListFactory;\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/inspectResults',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'core/logger',\n    'core/dataProvider/request',\n    'util/url',\n    'layout/actions/binder',\n    'layout/loading-bar',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'taoOutcomeUi/component/results/pluginsLoader',\n    'taoOutcomeUi/component/results/list',\n    'ui/taskQueueButton/treeButton'\n], function (\n    $,\n    _,\n    __,\n    module,\n    loggerFactory,\n    request,\n    urlHelper,\n    binder,\n    loadingBar,\n    feedback,\n    taskQueue,\n    resultsPluginsLoader,\n    resultsListFactory,\n    treeTaskButtonFactory\n) {\n    'use strict';\n\n    const logger = loggerFactory('controller/inspectResults');\n\n    /**\n     * Take care of errors\n     * @param err\n     */\n    function reportError(err) {\n        loadingBar.stop();\n\n        logger.error(err);\n\n        if (err instanceof Error) {\n            feedback().error(err.message);\n        }\n    }\n\n    /**\n     * @exports taoOutcomeUi/controller/resultTable\n     */\n    return {\n        /**\n         * Controller entry point\n         */\n        start: function () {\n            const config = module.config() || {};\n            const $container = $('#inspect-result');\n            const classUri = $container.data('uri');\n            const searchContainer = $('.action-bar .search-area');\n            if (searchContainer.data('show-result')) {\n                const action = {\n                    binding: 'load',\n                    url: urlHelper.route('viewResult', 'Results', 'taoOutcomeUi')\n                };\n                const context = {\n                    id: searchContainer.data('show-result'),\n                    classUri\n                };\n                searchContainer.removeData('show-result');\n                binder.exec(action, context);\n                return;\n            }\n            const listConfig = {\n                dataUrl: urlHelper.route('getResults', 'Results', 'taoOutcomeUi', {\n                    classUri: classUri\n                }),\n                model: config.dataModel,\n                searchable: config.searchable,\n                classUri: classUri\n            };\n            let taskButton;\n            let taskButtonExportSQL;\n\n            loadingBar.start();\n\n            _.forEach(config.plugins, function (plugin) {\n                if (plugin && plugin.module) {\n                    if (plugin.exclude) {\n                        resultsPluginsLoader.remove(plugin.module);\n                    } else {\n                        resultsPluginsLoader.add(plugin);\n                    }\n                }\n            });\n\n            if ($container.length) {\n                resultsPluginsLoader\n                    .load()\n                    .then(function () {\n                        resultsListFactory(listConfig, resultsPluginsLoader.getPlugins())\n                            .on('error', reportError)\n                            .on('success', function (message) {\n                                feedback().success(message);\n                            })\n                            .before('loading', function () {\n                                loadingBar.start();\n                            })\n                            .after('loaded', function () {\n                                loadingBar.stop();\n                            })\n                            .render($('.inspect-results-grid', $container));\n                    })\n                    .catch(reportError);\n            } else {\n                loadingBar.stop();\n            }\n\n            taskButton = treeTaskButtonFactory({\n                replace: true,\n                icon: 'export',\n                label: __('Export CSV'),\n                taskQueue: taskQueue\n            }).render($('#results-csv-export'));\n\n            binder.register('export_csv', function remove(actionContext) {\n                const data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n                const uniqueValue = data.uri || data.classUri || '';\n                taskButton\n                    .setTaskConfig({\n                        taskCreationUrl: this.url,\n                        taskCreationData: { uri: uniqueValue }\n                    })\n                    .start();\n            });\n\n            if ($('#results-sql-export').length) {\n                taskButtonExportSQL = treeTaskButtonFactory({\n                    replace: true,\n                    icon: 'export',\n                    label: __('Export SQL'),\n                    taskQueue: taskQueue\n                }).render($('#results-sql-export'));\n\n                binder.register('export_sql', function remove(actionContext) {\n                    const data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n                    const uniqueValue = data.uri || data.classUri || '';\n                    taskButtonExportSQL\n                        .setTaskConfig({\n                            taskCreationUrl: this.url,\n                            taskCreationData: { uri: uniqueValue }\n                        })\n                        .start();\n                });\n            }\n\n            binder.register('open_url', function (actionContext) {\n                const data = _.pick(actionContext, ['uri', 'classUri', 'id']);\n\n                request(this.url, data, 'POST')\n                    .then(response => {\n                        const url = response.url;\n\n                        if (url) {\n                            window.open(url, '_blank');\n                        } else {\n                            feedback().info(__('The URL does not exist.'));\n                        }\n                    })\n                    .catch(reportError);\n            });\n        }\n    };\n});\n\n","\ndefine('tpl!taoOutcomeUi/controller/resultModal', ['handlebars'], function(hb){ return hb.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"modal results-modal\\\">\\n\\n</div>\";\n},\"useData\":true}); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Aleksej Tikhanovich, <aleksej@taotesting.com>\n */\n\ndefine('taoOutcomeUi/controller/resultsMonitoring',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/url',\n    'uri',\n    'ui/feedback',\n    'util/locale',\n    'util/encode',\n    'layout/loading-bar',\n    'layout/actions/binder',\n    'ui/dialog/confirm',\n    'tpl!taoOutcomeUi/controller/resultModal',\n    'ui/datatable'\n], function ($, _, __, url, uri, feedback, locale, encode, loadingBar, binder, dialogConfirm, resultModalTpl) {\n    'use strict';\n\n    var $resultsListContainer = $('.results-list-container');\n    var $window = $(window);\n\n    /**\n     * Internet Explorer and Edge will not open the detail view when the table row was below originally below the fold.\n     * This is not cause by a too low container or some sort of overlay. As a workaround they get just as many rows\n     * as they can handle in one fold.\n     * @returns {number}\n     */\n    function getNumRows() {\n        var lineHeight       = 30;\n        var searchPagination = 70;\n        var $upperElem       = $('.content-container h2');\n        var topSpace         = $upperElem.offset().top\n            + $upperElem.height()\n            + parseInt($upperElem.css('margin-bottom'), 10)\n            + lineHeight\n            + searchPagination;\n        var availableHeight = $window.height() - topSpace - $('footer.dark-bar').outerHeight();\n        if(!window.MSInputMethodContext && !document.documentMode && !window.StyleMedia) {\n           return 25;\n        }\n        return Math.min(Math.floor(availableHeight / lineHeight), 25);\n    }\n\n\n\n    function getRequestErrorMessage (xhr) {\n        loadingBar.start();\n        var message = '';\n        try {\n            var responseJSON = $.parseJSON(xhr.responseText);\n            if (responseJSON.message) {\n                message = responseJSON.message;\n            } else {\n                message = xhr.responseText;\n            }\n        } catch (e) {\n            message = xhr.responseText;\n        }\n        return message;\n    }\n\n    function viewResult(rowId) {\n        var res = parseRowId(rowId);\n        loadingBar.start();\n        $.ajax({\n            url : url.route('viewResult', 'Results', 'taoOutcomeUi', {id : res[0], classUri: res[1]}),\n            type : 'GET',\n            success : function (result) {\n\n                var $container = $(resultModalTpl()).append(result);\n                $resultsListContainer.append($container);\n                $container.modal({\n                    startClosed : false,\n                    minWidth : 450,\n                    top: 50\n                });\n                $container.css({'max-height': $window.height() - 80 + 'px', 'overflow': 'auto'});\n                $container.on('click', function(e) {\n                    var $target = $(e.target);\n                    var $element = null;\n\n                    if ($target.is('a') && $target.hasClass(\"preview\")) {\n                        $element = $target;\n                    } else {\n                        if ($target.is('span') && $target.parent().hasClass(\"preview\")) {\n                            $element = $target.parent();\n                        }\n                    }\n\n                    if ($element) {\n                        // the trigger button might itself be inside a modal, in this case close that modal before doing anything else\n                        // only one modal should be open\n                        var $modalContainer = $element.parents('.modal');\n                        if ($modalContainer.length) {\n                            $modalContainer.trigger('closed.modal');\n                        }\n                        $('.preview-overlay').css({ zIndex: $container.modal().css('z-index') + 1 });\n                    }\n                });\n                $container\n                    .on('closed.modal', function(){\n                        $container.modal('destroy');\n                        $('.modal-bg').remove();\n                        $(this).remove();\n                    });\n                loadingBar.stop();\n            },\n            error : function (xhr, err) {\n                var message = getRequestErrorMessage(xhr);\n                feedback().error(message, {encodeHtml : false});\n                loadingBar.stop();\n            }\n        });\n    }\n\n    function checkValidItem() {\n        if (!this.start_time) {\n            return true\n        }\n        return false;\n    }\n\n    function downloadResult(rowId) {\n        var res = parseRowId(rowId);\n        $.fileDownload(url.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n            failMessageHtml: __(\"Unexpected error occurred when generating your report. Please contact your system administrator.\"),\n            httpMethod: 'GET',\n            data: {\n                id: res[0],\n                delivery: res[1]\n            }\n        });\n    }\n\n    function parseRowId(rowId) {\n        return rowId.split(\"|\");\n    }\n\n    return {\n        start: function () {\n            var $contentBlock = $resultsListContainer.parents(\".content-block\");\n\n            var resizeContainer = function() {\n                var padding = $contentBlock.innerHeight() - $contentBlock.height();\n\n                //calculate height for contentArea\n                $contentBlock.height(\n                    $window.height()\n                    - $(\"footer.dark-bar\").outerHeight()\n                    - $(\"header.dark-bar\").outerHeight()\n                    - $(\".tab-container\").outerHeight()\n                    - $(\".action-bar.content-action-bar\").outerHeight()\n                    - padding\n                );\n            };\n\n            $window.on('resize', _.debounce(resizeContainer, 300));\n            resizeContainer();\n\n            $resultsListContainer\n                .datatable({\n                    url: url.route('data', 'ResultsMonitoring', 'taoOutcomeUi'),\n                    filter: true,\n                    labels: {\n                        filter: __('Search by results')\n                    },\n                    model: [{\n                        id: 'delivery',\n                        label: __('Delivery'),\n                        sortable: false\n                    }, {\n                        id: 'deliveryResultIdentifier',\n                        label: __('Delivery Execution'),\n                        sortable: false,\n                    }, {\n                        id: 'userName',\n                        label: __('Test Taker'),\n                        sortable: false\n                    }, {\n                        id: 'start_time',\n                        label: __('Start Time'),\n                        sortable: false\n                    }],\n                    paginationStrategyTop: 'simple',\n                    paginationStrategyBottom: 'pages',\n                    rows: getNumRows(),\n                    sortby: 'result_id',\n                    sortorder: 'desc',\n                    actions : {\n                        'view' : {\n                            id: 'view',\n                            label: __('View'),\n                            icon: 'external',\n                            action: viewResult,\n                            disabled: checkValidItem\n                        },\n                        'download' :{\n                            id : 'download',\n                            title : __('Download result'),\n                            icon : 'download',\n                            label : __('Download'),\n                            action: downloadResult,\n                            disabled: checkValidItem\n                        }\n                    }\n                });\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/resultTable',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'util/url',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'ui/taskQueueButton/standardButton',\n    'ui/dateRange/dateRange',\n    'layout/loading-bar',\n    'ui/datatable'\n], function($, _, __, module, urlUtil, feedback, taskQueue, standardTaskButtonFactory, dateRangeFactory, loadingBar) {\n    'use strict';\n\n    /**\n     * @exports taoOutcomeUi/controller/resultTable\n     */\n    var resulTableController =  {\n\n        /**\n         * Controller entry point\n         */\n        start : function start() {\n\n            var conf = module.config();\n            var $container = $(\".result-table\");\n            var $filterField = $('.result-filter', $container);\n            var $filterButtonsContainer = $('.filter-buttons', $container);\n            var $tableContainer = $('.result-table-container', $container);\n            var $dateStartRangeContainer = $('.de-start-range', $container);\n            var $dateEndRangeContainer = $('.de-end-range', $container);\n            var filter = conf.filter || 'lastSubmitted';\n            var deStartFrom = '';\n            var deStartTo = '';\n            var deEndFrom = '';\n            var deEndTo = '';\n            var uri = conf.uri || '';\n            //keep columns through calls\n            var columns = [];\n            var groups = {};\n\n            //setup the date range pickers\n            var filterDeStartRange = dateRangeFactory($dateStartRangeContainer, {\n                startPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodStart',\n                    }\n                },\n                endPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodEnd'\n                    }\n                }\n            })\n                .on('change', function (v) {\n                    console.log('changed', v)\n                })\n                .on('render', function () {\n                    $('button', $dateStartRangeContainer).hide();\n                });\n\n            var filterDeEndRange = dateRangeFactory($dateEndRangeContainer, {\n                startPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodStart',\n                    }\n                },\n                endPicker: {\n                    setup: 'datetime',\n                    format: 'YYYY-MM-DD HH:mm:ss',\n                    field: {\n                        name: 'periodEnd'\n                    }\n                }\n            })\n                .on('render', function () {\n                    $('button', $dateEndRangeContainer).hide();\n                });\n\n            /**\n             * Load columns to rebuild the datatable dynamically\n             * @param {String} url  - the URL that retrieve the columns\n             * @param {String} [action = 'add'] - 'add' or 'remove' the retrieved columns\n             * @param {Function} done - once the datatable is loaded\n             */\n            var buildGrid = function buildGrid(url, action, done) {\n                loadingBar.start();\n                $.ajax({\n                    url: url,\n                    dataType: 'json',\n                    data: {filter: filter, uri: uri},\n                    type: 'GET'\n                }).done(function (response) {\n                    if (response && response.columns) {\n                        if (action === 'remove') {\n                            columns = _.reject(columns, function (col) {\n                                return _.find(response.columns, function (resCol) {\n                                    return _.isEqual(col, resCol);\n                                });\n                            });\n                        } else {\n                            if (typeof response.first !== 'undefined' && response.first === true) {\n                                columns = response.columns.concat(columns);\n                            } else {\n                                columns = columns.concat(response.columns);\n                            }\n                        }\n                    }\n                    if (_.isFunction(done)) {\n                        done();\n                    }\n                }).always(function () {\n                    loadingBar.stop();\n                });\n            };\n\n            /**\n             * Rebuild the datatable\n             * @param {Function} done - once the datatable is loaded\n             */\n            var _buildTable = function _buildTable(done) {\n                var model = [];\n\n                //set up model from columns\n                _.forEach(columns, function (col) {\n                    var colId = col.prop ? (col.prop + '_' + col.contextType) : (col.contextId + '_' + col.variableIdentifier);\n                    if(col.columnId){\n                        colId= col.columnId\n                    }\n                    model.push({\n                        id: colId,\n                        label: col.label,\n                        sortable: false\n                    });\n                });\n\n                //re-build the datatable\n                $tableContainer\n                    .empty()\n                    .data('ui.datatable', null)\n                    .off('load.datatable')\n                    .on('load.datatable', function () {\n                        if (_.isFunction(done)) {\n                            done();\n                            done = '';\n                        }\n                    })\n                    .datatable({\n                        url: urlUtil.route('feedDataTable', 'ResultTable', 'taoOutcomeUi',\n                            {\n                                filter: filter,\n                                startfrom: deStartFrom,\n                                startto: deStartTo,\n                                endfrom: deEndFrom,\n                                endto: deEndTo\n                            }),\n                        querytype: 'POST',\n                        params: {columns: JSON.stringify(columns), '_search': false, uri: uri},\n                        model: model\n                    });\n            };\n\n            var filterChanged = function filterChanged() {\n                filter = $filterField.select2('val');\n                deStartFrom = filterDeStartRange.getStart();\n                deStartTo = filterDeStartRange.getEnd();\n                deEndFrom = filterDeEndRange.getStart();\n                deEndTo = filterDeEndRange.getEnd();\n                //rebuild the current table\n                _buildTable();\n            };\n\n            //group button to toggle them\n            $('[data-group]', $container).each(function () {\n                var $elt = $(this);\n                var group = $elt.data('group');\n                var action = $elt.data('action');\n                groups[group] = groups[group] || {};\n                groups[group][action] = $elt;\n            });\n\n            //regarding button data, we rebuild the table\n            $container.on('click', '[data-group]', function (e) {\n                var $elt = $(this);\n                var group = $elt.data('group');\n                var action = $elt.data('action');\n                var url = $elt.data('url');\n                e.preventDefault();\n                buildGrid(url, action, function () {\n                    _.forEach(groups[group], function ($btn) {\n                        $btn.toggleClass('hidden');\n                    });\n                });\n            });\n\n            //default table\n            buildGrid(urlUtil.route('getTestTakerColumns', 'ResultTable', 'taoOutcomeUi', {filter: filter}));\n\n            //setup the filtering\n            $filterField.select2({\n                minimumResultsForSearch: -1\n            }).select2('val', filter);\n\n            $('.result-filter-btn', $container)\n                .click(function () {\n                    filterChanged();\n                });\n\n            //instantiate the task creation button\n            standardTaskButtonFactory({\n                type: 'info',\n                icon: 'export',\n                title: __('Export CSV File'),\n                label: __('Export CSV File'),\n                taskQueue: taskQueue,\n                taskCreationUrl: urlUtil.route('export', 'ResultTable', 'taoOutcomeUi'),\n                taskCreationData: function getTaskRequestData() {\n                    return {\n                        filter: filter,\n                        columns: JSON.stringify(columns),\n                        uri: uri,\n                        startfrom: deStartFrom,\n                        startto: deStartTo,\n                        endfrom: deEndFrom,\n                        endto: deEndTo\n                    };\n                }\n            }).on('error', function (err) {\n                feedback().error(err);\n            }).render($filterButtonsContainer);\n\n            if (conf.allowSqlExport) {\n                standardTaskButtonFactory({\n                    type: 'info',\n                    icon: 'export',\n                    title: __('Export SQL File'),\n                    label: __('Export SQL File'),\n                    taskQueue: taskQueue,\n                    taskCreationUrl: urlUtil.route('exportSQL', 'ResultTable', 'taoOutcomeUi'),\n                    taskCreationData: function getTaskRequestData() {\n                        filterChanged();\n                        return {\n                            filter: filter,\n                            columns: JSON.stringify(columns),\n                            uri: uri,\n                            startfrom: deStartFrom,\n                            startto: deStartTo,\n                            endfrom: deEndFrom,\n                            endto: deEndTo\n                        };\n                    }\n                }).on('error', function (err) {\n                    feedback().error(err);\n                }).render($filterButtonsContainer);\n            }\n        }\n    };\n    return resulTableController;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoOutcomeUi/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Results': {\n            'actions': {\n                'viewResult' : 'controller/viewResult',\n                'index' : 'controller/inspectResults'\n            }\n        },\n        'ResultTable': {\n            'actions': {\n                'index' : 'controller/resultTable'\n            }\n        },\n        'ResultsMonitoring': {\n            'actions': {\n                'index': 'controller/resultsMonitoring'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoOutcomeUi/controller/viewResult',[\n    'module',\n    'jquery',\n    'i18n',\n    'util/url',\n    'core/logger',\n    'core/request',\n    'layout/section',\n    'taoItems/previewer/factory',\n    'ui/dialog/confirm',\n    'uri',\n    'ui/feedback',\n    'core/router',\n    'jquery.fileDownload'\n], function (\n    module,\n    $,\n    __,\n    urlHelper,\n    loggerFactory,\n    request,\n    section,\n    previewerFactory,\n    dialogConfirm,\n    uriHelper,\n    feedback,\n    router\n) {\n    'use strict';\n\n    const logger = loggerFactory('taoOutcomeUi/viewResults');\n    const downloadUrl = urlHelper.route('getFile', 'Results', 'taoOutcomeUi');\n    const dataUrl = urlHelper.route('getVariableFile', 'Results', 'taoOutcomeUi');\n\n    /**\n     * Requests a file content given the URIs\n     * @param {String} variableUri - The URI of a variable\n     * @param {String} deliveryUri - The URI of a delivery\n     * @returns {Promise}\n     */\n    function requestFileContent(variableUri, deliveryUri) {\n        return request({\n            url: dataUrl,\n            method: 'POST',\n            data: { variableUri, deliveryUri }\n        })\n            .then(response => {\n                // The response may contain more than the expected data,\n                // like the success status, which is not relevant here.\n                // Hence this rewriting.\n                const { data, name, mime } = response;\n                return { data, name, mime };\n            });\n    }\n\n    /**\n     * Makes sure the response contains the file data if it is a file record\n     * @param {Object} response\n     * @param {String} deliveryUri\n     * @returns {Promise}\n     */\n    function refineFileResponse(response, deliveryUri) {\n        const { file } = response && response.base || {};\n        if (file && file.uri && !file.data) {\n            return requestFileContent(file.uri, deliveryUri)\n                .then(fileData => {\n                    if (fileData && fileData.data) {\n                        response.base.file = fileData;\n                    } else {\n                        response.base = null;\n                    }\n                })\n                .catch(e => logger.error(e));\n        }\n        return Promise.resolve();\n    }\n\n    /**\n     * Makes sure the item state contains the file data in the response if it is a file record\n     * @param {Object} state\n     * @param {String} deliveryUri\n     * @returns {Promise}\n     */\n    function refineItemState(state, deliveryUri) {\n        if (!state) {\n            return Promise.resolve(state);\n        }\n\n        const filePromises = Object.keys(state).map(identifier => {\n            const { response } = state[identifier];\n            return refineFileResponse(response, deliveryUri);\n        });\n        return Promise.all(filePromises).then(() => state);\n    }\n\n    /**\n     * @exports taoOutcomeUi/controller/viewResult\n     */\n    const viewResultController =  {\n\n        /**\n         * Controller entry point\n         */\n        start(){\n            const conf = module.config();\n            const deliveryUri = conf.classUri;\n            const $container = $('#view-result');\n            const $resultFilterField = $('.result-filter', $container);\n            const $classFilterField = $('[name=\"class-filter\"]', $container);\n            let classFilter = JSON.parse(conf.filterTypes) || [];\n\n            //set up filter field\n            $resultFilterField.select2({\n                minimumResultsForSearch : -1\n            }).select2('val', conf.filterSubmission || 'all');\n\n        for (let i in classFilter) {\n            $(`[value = \"${classFilter[i]}\"]`).prop('checked', 'checked');\n        }\n\n            $('.result-filter-btn', $container).click(() => {\n                classFilter = [''];\n                $classFilterField.each(function () {\n                    if ($(this).prop('checked')) {\n                        classFilter.push($(this).val());\n                    }\n                });\n                section.loadContentBlock(\n                    urlHelper.route('viewResult', 'Results', 'taoOutcomeUi'),\n                    {\n                        id: conf.id,\n                        classUri:  conf.classUri,\n                        filterSubmission: $resultFilterField.select2('val'),\n                        filterTypes: classFilter\n                    }\n                );\n            });\n\n\n            //bind the xml download button\n            $('#xmlDownload', $container).on('click', function () {\n                $.fileDownload(urlHelper.route('downloadXML', 'Results', 'taoOutcomeUi'), {\n                    failMessageHtml: __(\"Unexpected error occurred when generating your report. Please contact your system administrator.\"),\n                    httpMethod: 'GET',\n                    data: {\n                        id: conf.id,\n                        delivery: conf.classUri\n                    }\n                });\n            });\n\n            // bind the file download button\n            $('[id^=fileDownload]', $container).on('click', function () {\n                const variableUri = $(this).val();\n                $.fileDownload(downloadUrl, {\n                    httpMethod: 'POST',\n                    data: {\n                        variableUri,\n                        deliveryUri\n                    }\n                });\n            });\n\n            //bind the download buttons\n            $('.delete', $container).on('click', function () {\n                dialogConfirm(__('Please confirm deletion'), function () {\n                    $.ajax({\n                        url: urlHelper.route('delete', 'Results', 'taoOutcomeUi'),\n                        type: \"POST\",\n                        data: {\n                            uri: uriHelper.encode(conf.id)\n                        },\n                        dataType: 'json'\n                    }).done(function (response) {\n                        if (response.deleted) {\n                            feedback().success(__('Result has been deleted'));\n                            // Hack to go back to the list of results\n                            router.dispatch('tao/Main/index');\n                        } else {\n                            feedback().error(__('Something went wrong...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    }).fail(function () {\n                        feedback().error(__('Something went wrong...'));\n                    });\n                });\n            });\n\n            $('.print', $container).on('click', function () {\n                window.print();\n            });\n\n            $('.preview', $container).on('click', function (e) {\n                const $btn = $(this);\n                const deliveryId = $btn.data('deliveryId');\n                const resultId = $btn.data('resultId');\n                const itemDefinition = $btn.data('definition');\n                let uri = $btn.data('uri');\n                const type = $btn.data('type');\n                e.preventDefault();\n                if ($btn.prop('disabled')) {\n                    return;\n                }\n                $btn.prop('disabled', true).addClass('disabled');\n\n                if (deliveryId && resultId && itemDefinition) {\n                    uri = {\n                        uri: uri,\n                        resultId: resultId,\n                        itemDefinition: itemDefinition,\n                        deliveryUri: deliveryId\n                    };\n                }\n\n                Promise.resolve($btn.data('state'))\n                    .then(state => refineItemState(state, deliveryUri))\n                    .then(state => {\n                        $btn.removeProp('disabled').removeClass('disabled');\n                        previewerFactory(type, uri, state, {\n                            view: 'reviewRenderer',\n                            fullPage: true\n                        });\n                    })\n                    .catch(err => logger.error(err));\n            });\n\n        }\n    };\n\n    return viewResultController;\n});\n\n","\ndefine(\"taoOutcomeUi/loader/taoOutcomeUi.bundle\", function(){});\n","define(\"taoOutcomeUi/loader/taoOutcomeUi.min\", [\"taoItems/loader/taoItems.min\"], function(){});\n"],"mappings":"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"}